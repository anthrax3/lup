{"name":"Lup","tagline":"Easy to use CSS3 transition manager","body":"Lup\r\n===\r\n\r\n> Easy to use CSS3 transition manager\r\n\r\n**Lup** is a lightweight and easy to use library to manage and control CSS3 transition. \r\n\r\n## Hello world\r\n\r\n```javascript\r\n//take `#test` element, add `green` css class and wait for 2 seconds, then remove all css classes\r\nlup(\"#test\").add('green').wait(2000).end();\r\n``` \r\n\r\n## API\r\n\r\n###lup(targetElement)\r\n\r\nTo create lup object.\r\n\r\n**Available since**: v0.1.0\r\n\r\n**Parameters:**\r\n - targetElement: String or Object  \r\n   Can be both css selector or DOM object\r\n\r\n**Returns:**\r\n - lup object.\r\n\r\n**Example:**\r\n```javascript\r\nlup('#test');\r\n\r\nlup(document.querySelector('#test'));\r\n````\r\n\r\n###lup.add(className)\r\n\r\nAdds given CSS class name to the target element\r\n\r\n**Available since:** v0.1.0\r\n\r\n**Parameters:**\r\n - className: String\r\n\r\n**Returns:**\r\n - lup object.\r\n\r\n**Example:**\r\n```javascript\r\nlup('#test').add('green').end();\r\n```\r\n\r\n-----\r\n\r\n###lup.remove([className])\r\n\r\nRemoves given CSS class name from target element \r\n\r\n**Available since:** v0.1.0\r\n\r\n**Parameters:**\r\n - className: String (optional)\r\n\r\n**Returns:**\r\n - lup object.\r\n\r\n**Example:**\r\n```javascript\r\nlup('#test').add('green').remove().end(); /* Removes `green` class */\r\nlup('#test').add('green').remove('green').end(); /* Same as previous line, removes `green` class */\r\nlup('#test').add('green').add('red').remove().end(); /* Removes `red` class */\r\n```\r\n\r\n-----\r\n\r\n###lup.then([fn])\r\n\r\nWait for completing last operation, CSS3 transition for example.\r\n\r\n**Available since:** v0.1.0\r\n\r\n**Parameters:**\r\n - fn: Function (optional)\r\n\r\n**Returns:**\r\n - lup object.\r\n\r\n**Example:**\r\n```javascript\r\nlup('#test').add('green').then().add('red').end(); /* Adds `green` and then after completing `green` class transition, adds `red` class */\r\nlup('#test').add('green').then(function(){ alert('green completed!') }).end(); /* Adds `green`, shows `alert` after completing transition*/\r\n```\r\n\r\n-----\r\n\r\n###lup.wait(milliseconds)\r\n\r\nWait and then execute next operation.\r\n\r\n**Available since:** v0.1.0\r\n\r\n**Parameters:**\r\n - milliseconds: Number\r\n\r\n**Returns:**\r\n - lup object.\r\n\r\n**Example:**\r\n```javascript\r\nlup('#test').add('green').wait(1000).add('red').end(); /* Adds `green` and after one second adds `red` class */\r\n```\r\n\r\n-----\r\n\r\n###lup.end([fn])\r\n\r\nExecute the operations. \r\n\r\n**Available since:** v0.1.0\r\n\r\n**Parameters:**\r\n - fn: Number\r\n\r\n**Returns:**\r\n - lup object.\r\n\r\n**Example:**\r\n```javascript\r\nlup('#test').add('green').end(); /* Adds `green` css class */\r\n```\r\n\r\n-----\r\n\r\n###lup.option(option, value)\r\n\r\nSet a single option to lup object.\r\n\r\n**Available since**: v0.1.0\r\n\r\n**Parameters:**\r\n - option : String\r\n   Option key name.\r\n\r\n - value : String/Number\r\n   Value of the option.\r\n\r\n**Returns:**\r\n - lup object.\r\n\r\n**Example:**\r\n```javascript\r\nlup(\"#test\").add('green').option('cleanup', false).end();\r\n````\r\n\r\n----\r\n\r\n###lup.options(options)\r\n\r\nSet a group of options to the lup object.\r\n\r\n**Available since**: v0.1.0\r\n\r\n**Parameters:**\r\n - options : Object\r\n   Object that contains option keys with values.\r\n\r\n**Returns:**\r\n - lup object.\r\n\r\n**Example:**\r\n```javascript\r\nlup(\"#test\").add('green').options({ 'cleanup': false }).end();\r\n````\r\n\r\n----\r\n\r\n###Options:\r\n\r\n - `cleanup`: `Boolean` and `true` by default - Clean all css classes at the end of timeline?\r\n\r\n*Note:* You can alter options using `option` and `options` methods.\r\n\r\n## Roadmap\r\n- Support more than one target element\r\n- Add more examples\r\n\r\n## Release History\r\n\r\n * **v0.1.0** - 2014-06-06\r\n   - Initial version\r\n\r\n## Author\r\n**Afshin Mehrabani**\r\n\r\n- [Twitter](https://twitter.com/afshinmeh)\r\n- [Github](https://github.com/afshinm)\r\n- [Personal page](http://afshinm.name/)\r\n\r\n## License\r\n> Copyright (C) 2014 Afshin Mehrabani (afshin.meh@gmail.com)\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\r\n    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\r\n    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,\r\n    and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions\r\n    of the Software.\r\n    \r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\r\n    TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\r\n    CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n    IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}